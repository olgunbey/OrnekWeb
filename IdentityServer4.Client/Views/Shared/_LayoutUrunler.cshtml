
<script src="https://code.jquery.com/jquery-3.7.0.js"
        integrity="sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM="
        crossorigin="anonymous"></script>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<link rel="stylesheet" href="~/IdentityServer4.Client.styles.css" asp-append-version="true" />




<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" asp-action="Index" asp-controller="Home">E-Ticaret</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>


    <div class="collapse navbar-collapse" id="navbarNav">


        <ul class="navbar-nav">


        </ul>



    </div>
</nav>




  

<div class="container">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

            
          <script>
    const ulEtiket=document.querySelector(".navbar-nav"); 
    

    function AjaxRequestCategoriesUpdated(accessToken)
    {
        return new Promise((resolve,reject)=>{
            $.ajax({
                type: 'GET',
                url: 'https://localhost:7237/api/Urunler/ThreeChildKategoryiesList',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);
                },
                success: function (data) {
                    var oneChildKategori = data.data.oneChildKategorilerDtos;
                    var threeChildKategori = data.data.threeChildKategoriDtos;
                    var TwoChildKategori = data.data.twoChildKategorilerDtos;

                    for (let category of threeChildKategori) {
                        var createli = document.createElement("li");
                        createli.className = "anacategoryli";
                        var createa = document.createElement("a");
                        createa.className = "anacategorya";
                        createa.classList.add("nav-link");
                        createa.textContent = category.threeChildKategoriName;
                        createli.appendChild(createa);
                        ulEtiket.appendChild(createli);



                        for (twoChildCategories of TwoChildKategori) {
                            if (twoChildCategories.threeChildID == category.id) {
                                var createsubli = document.createElement("li");
                                createsubli.className = "categoryli";
                                var createsuba = document.createElement("a");
                                createsuba.textContent = twoChildCategories.twoChildKategoriName;
                                createsuba.style.color = "red";
                                createsuba.href = `/Urunler/UrunlerListele?kategories=${twoChildCategories.twoChildKategoriName}`
                                createsuba.className = "categorya";
                                createsuba.classList.add("nav-link");
                                createsuba.classList.add(`categorya${twoChildCategories.id}`);
                                createsubli.appendChild(createsuba);
                                createli.appendChild(createsubli);


                                for (oneChildCategories of oneChildKategori) {
                                    if (oneChildCategories.twoChildKategorilerDto != null) {
                                        if (twoChildCategories.id == oneChildCategories.twoChildKategoriID) {
                                            var createsubsubli = document.createElement("li");
                                            createsubsubli.className = "categoryli";
                                            createsubsubli.classList.add("shadowLi");
                                            createsubsubli.classList.add(`twoChildCategori${oneChildCategories.twoChildKategoriID}`);
                                            var createsubsuba = document.createElement("a");
                                            createsubsuba.style.color = "orange";
                                            createsubsuba.textContent = oneChildCategories.oneChildKategoriName;
                                            createsubsuba.href = `/Urunler/UrunlerListele?kategories=${oneChildCategories.oneChildKategoriName}`;
                                            createsubsuba.className = "categorysuba";
                                            createsubsuba.classList.add("nav-link");
                                            createsubsubli.appendChild(createsubsuba);
                                            createsubli.appendChild(createsubsubli);
                                        }
                                    }
                                    if (oneChildCategories.threeChildKategoriDto != null) {
                                        if (oneChildCategories.threeChildKategoriID == category.id) {
                                            var anasubli = document.createElement("li");
                                            anasubli.className = "categoryli";
                                            anasubli.classList.add(`threeChildCategori${oneChildCategories.threeChildKategoriID}`);
                                            var anasubba = document.createElement("a");
                                            anasubba.style.color = "orange";
                                            anasubba.textContent = oneChildCategories.oneChildKategoriName;
                                            anasubba.href = `/Urunler/UrunlerListele?kategories=${oneChildCategories.oneChildKategoriName}`;
                                            anasubba.className = "categorysuba";
                                            anasubba.classList.add("nav-link");

                                            anasubli.appendChild(anasubba);
                                            createli.appendChild(anasubli);
                                        }
                                    }
                                }
                            }
                        }
                        for (oneChildCategories of oneChildKategori) {
                            //if (oneChildCategories.twoChildKategorilerDto != null) {
                            //    if (twoChildCategories.id == oneChildCategories.twoChildKategoriID) {
                            //        var createsubsubli = document.createElement("li");
                            //        createsubsubli.className = "categoryli";
                            //        createsubsubli.classList.add(`twoChildCategori${oneChildCategories.twoChildKategoriID}`);
                            //        createsubsubli.classList.add("shadowLi");
                            //        var createsubsuba = document.createElement("a");
                            //        createsubsuba.style.color = "orange";
                            //        createsubsuba.textContent = oneChildCategories.oneChildKategoriName;
                            //        createsubsuba.href = `/Urunler/UrunlerListele?kategories=${oneChildCategories.oneChildKategoriName}`;
                            //        createsubsuba.className = "categorysuba";
                            //        createsubsuba.classList.add("nav-link");
                            //        createsubsubli.appendChild(createsubsuba);
                            //        createsubli.appendChild(createsubsubli);
                            //    }
                            //}
                            if (oneChildCategories.threeChildKategoriDto != null) {
                                if (oneChildCategories.threeChildKategoriID == category.id) {
                                    var anasubli = document.createElement("li");
                                    anasubli.className = "categoryli";
                                    anasubli.classList.add(`threeChildCategori${oneChildCategories.threeChildKategoriID}`);
                                    var anasubba = document.createElement("a");
                                    anasubba.style.color = "orange";
                                    anasubba.textContent = oneChildCategories.oneChildKategoriName;
                                    anasubba.href = `/Urunler/UrunlerListele?kategories=${oneChildCategories.oneChildKategoriName}`;
                                    anasubba.className = "categorysuba";
                                    anasubba.classList.add("nav-link");
                                    anasubli.appendChild(anasubba);
                                    createli.appendChild(anasubli);
                                }
                            }
                        }
                    }

                    resolve();

                },
                error: function (error) {
                    console.error('Error:', error);
                    reject();
                },
            });
        });
    }

    function ajaxRequestAltCategories(accessToken, textContent) {
        return new Promise((resolve,reject)=>{
            $.ajax({
                type: 'GET',
                url: `https://localhost:7237/api/Urunler/AltKategoriUrunlerGetir/${textContent}`,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);
                },
                success: function (data) {
                    const key = "Categories";
                    localStorage.setItem(key, JSON.stringify(data));
                    resolve();
                },
                error: function (error) {
                    console.error('Error:', error);
                },
            });
        });
    }


    function ajaxRequestUstCategories(accessToken,textContent)
    {
        return new Promise((resolve,reject)=>{
            $.ajax({
                type: 'GET',
                url: `https://localhost:7237/api/Urunler/UstKategoriUrunlerGetir/${textContent}`,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);

                },
                success: function (data) {
                    const keyes = "Categories";
                    localStorage.setItem(keyes, JSON.stringify(data));
                    resolve();
                },
                error: function (error) {
                    console.error('Error', error);
                },
            });
        });     
    }


    function getAccessToken()
    {
        return $.ajax({
            type: 'POST',
            url: 'https://localhost:7291/connect/token',
            data: {
                grant_type: 'client_credentials',
                client_id: 'Client1',
                client_secret: 'secret'
            },
        });
    }
    getAccessToken().done(async function (accessTokenResponse) 
    {
        var accessToken = accessTokenResponse.access_token; 
        await AjaxRequestCategoriesUpdated(accessToken);

       const liler = document.querySelectorAll(".categorysuba");
       const ustliler = document.querySelectorAll(".categoryli");
       const ustunli=document.querySelectorAll(".categoryli");

        liler.forEach(element => {
            element.addEventListener('click', async () => {
                const textContent = element.textContent;
                await ajaxRequestAltCategories(accessToken, encodeURIComponent(textContent));
            });
        });
        var categorySubaElements = document.querySelectorAll(".categorysuba");
        

        const ShadowLi = document.querySelectorAll(".shadowLi");
        for (var i = 0; i < ShadowLi.length; i++) {
            ShadowLi[i].style.display = "none";
        }

        ustliler.forEach(e => {
            e.addEventListener('click',async () => {
                const textContent = e.textContent;
               await ajaxRequestUstCategories(accessToken, encodeURIComponent(textContent));

            });
            e.addEventListener('mouseover',()=>{
                for(let i=1;i<=ustliler.length;i++)
                {
                const ShowLies= e.getElementsByTagName("li");
                console.log(e);
                Array.from(e.children).forEach(children=>{
                    children.classList.forEach(childrennClassName=>{
                        if(childrennClassName==`twoChildCategori${i}`)
                        {
                            children.style.display="";
                        }
                    })
                })
                }
            });
            e.addEventListener('mouseout', async () => {
                for (let i = 1; i <= ustliler.length; i++) {
                    const ShowLies = e.getElementsByTagName("li");
                    console.log(e);
                    Array.from(e.children).forEach(children => {
                        children.classList.forEach(childrennClassName => {
                            if (childrennClassName == `twoChildCategori${i}`) {
                                children.style.display = "none";
                            }
                        })
                    })
                }
            });
            
        });
    });
    
    
          </script>
