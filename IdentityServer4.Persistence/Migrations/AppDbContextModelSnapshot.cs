// <auto-generated />
using IdentityServer4.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IdentityServer4.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IdentityServer4.Domain.Entities.Kullanicilar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KullaniciAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSifre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("IdentityServer4.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("IdentityServer4.Domain.Entities.RoleKullanicilarManyToMany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciID");

                    b.HasIndex("RoleID");

                    b.ToTable("RoleKullanicilarManyToManies");
                });

            modelBuilder.Entity("IdentityServer4.Domain.Entities.RoleKullanicilarManyToMany", b =>
                {
                    b.HasOne("IdentityServer4.Domain.Entities.Kullanicilar", "Kullanicilar")
                        .WithMany("RoleKullanicilarManyToManies")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IdentityServer4.Domain.Entities.Role", "Role")
                        .WithMany("RoleKullanicilarManyToManies")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanicilar");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IdentityServer4.Domain.Entities.Kullanicilar", b =>
                {
                    b.Navigation("RoleKullanicilarManyToManies");
                });

            modelBuilder.Entity("IdentityServer4.Domain.Entities.Role", b =>
                {
                    b.Navigation("RoleKullanicilarManyToManies");
                });
#pragma warning restore 612, 618
        }
    }
}
